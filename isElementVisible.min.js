/**
 * @file This library defines an object with two functions to detect visibility (total or partial) of an element in the viewport, and two functions that simulate two nonexistent events to detect when any element enters or leaves the visible area of the page.
 * @author José Manuel Alarcón - www.JASoft.org - www.campusMVP.es
 * @version 2.0
 * @license MIT
 */
!function(){function e(e,n){var t=!1;return function(){t||(e.apply(this,arguments),t=!0,setTimeout(function(){t=!1},1e3/n))}}function d(e){var n=window.innerWidth||document.documentElement.clientWidth,t=window.innerHeight||document.documentElement.clientHeight,i=e.getBoundingClientRect();return 0<=i.top&&i.bottom<=t&&0<=i.left&&i.right<=n}function l(e){var n=window.innerWidth||document.documentElement.clientWidth,t=window.innerHeight||document.documentElement.clientHeight,i=e.getBoundingClientRect(),o=0<=i.left&&i.left<=n||0<=i.right&&i.right<=n,r=0<=i.top&&i.top<=t||0<=i.bottom&&i.bottom<=t;return o&&r}window.visibilityHelper={isElementTotallyVisible:d,isElementPartiallyVisible:l,inViewportPartially:function(n,t,i){var o=l(n),r=e(function(){var e=l(n);e!=o&&(i&&(window.removeEventListener("load",r),window.removeEventListener("resize",r),window.removeEventListener("scroll",r)),o=e,"function"==typeof t&&t(e,n))},20);window.addEventListener("load",r),window.addEventListener("resize",r),window.addEventListener("scroll",r)},inViewportTotally:function(n,t,i){var o=d(n),r=e(function(){var e=d(n);e!=o&&(o=e,i&&(window.removeEventListener("load",r),window.removeEventListener("resize",r),window.removeEventListener("scroll",r)),"function"==typeof t&&t(e,n))},20);window.addEventListener("load",r),window.addEventListener("resize",r),window.addEventListener("scroll",r)}}}();